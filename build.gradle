plugins {
    id 'java'
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'com.avast.gradle.docker-compose' version "${dockerComposeVersion}"
    id 'maven-publish'
}


repositories {
    mavenCentral()
}

java {
    sourceCompatibility(JavaVersion.VERSION_15)
    targetCompatibility(JavaVersion.VERSION_15)
}

group 'me.ivanlis'
version '0.0.1-SNAPSHOT'


dependencies {
    implementation("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

test {
    useJUnitPlatform()
}


dockerCompose.isRequiredBy(test)
dockerCompose {
    useComposeFiles = ['src/test/resources/docker-compose.yml']

    // Set to true if you have anomalies
    // But notice, that usually `./gradlew composeDownForce` helps as well.
    stopContainers = true

    removeContainers = true
    removeVolumes = true
}
